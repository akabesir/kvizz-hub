{
    "sourceFile": "src/components/QuizForm/QuestionTypesAnswers/DropdownAnswer.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1684325619722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1684331583166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,14 +17,13 @@\n   const [options, setOptions] = useState(question.options);\r\n   const [selectedOptionId, setSelectedOptionId] = useState(null);\r\n \r\n   const handleOptionSelect = (event) => {\r\n-    setSelectedOptionId(event.target.value);\r\n+    const selectedOption = options.find((option) => option.value === event.target.value);\r\n     const newQuestions = [...questions];\r\n-    newQuestions[index].answer = event.target.value;\r\n+    newQuestions[index].answer = selectedOption.label;\r\n     setQuestions(newQuestions);\r\n   };\r\n-\r\n   return (\r\n     <>\r\n       {questionType === \"dropdown\" && (\r\n         <>\r\n"
                },
                {
                    "date": 1684331603112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,18 +33,26 @@\n             style={{ marginBottom: \"16px\", width: \"100%\", minWidth: \"450px\" }}\r\n           >\r\n             <InputLabel>{question.placeholder}</InputLabel>\r\n             <Select\r\n-              value={selectedOptionId}\r\n-              label={question.placeholder}\r\n-              onChange={handleOptionSelect}\r\n-            >\r\n-              {options.map((option, index) => (\r\n-                <MenuItem key={index} value={option.value}>\r\n-                  {option.label}\r\n-                </MenuItem>\r\n-              ))}\r\n-            </Select>\r\n+  value={selectedOptionId}\r\n+  label={question.placeholder}\r\n+  onChange={handleOptionSelect}\r\n+>\r\n+  {options.map((option, index) => (\r\n+    <MenuItem key={index} value={option.value}>\r\n+      {option.label}\r\n+    </MenuItem>\r\n+  ))}\r\n+</Select>\r\n+Molim vas da zamenite taj kod u postojećoj komponenti. Ako imate još pitanja, slobodno pitajte.\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n           </FormControl>\r\n \r\n           <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n \r\n"
                },
                {
                    "date": 1684331751889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,12 +18,27 @@\n   const [selectedOptionId, setSelectedOptionId] = useState(null);\r\n \r\n   const handleOptionSelect = (event) => {\r\n     const selectedOption = options.find((option) => option.value === event.target.value);\r\n+    setSelectedOptionId(event.target.value);\r\n     const newQuestions = [...questions];\r\n     newQuestions[index].answer = selectedOption.label;\r\n     setQuestions(newQuestions);\r\n   };\r\n+  \r\n+  // ...\r\n+  \r\n+  <Select\r\n+    value={selectedOptionId}\r\n+    label={question.placeholder}\r\n+    onChange={handleOptionSelect}\r\n+  >\r\n+    {options.map((option, index) => (\r\n+      <MenuItem key={index} value={option.value}>\r\n+        {option.label}\r\n+      </MenuItem>\r\n+    ))}\r\n+  \r\n   return (\r\n     <>\r\n       {questionType === \"dropdown\" && (\r\n         <>\r\n@@ -33,26 +48,19 @@\n             style={{ marginBottom: \"16px\", width: \"100%\", minWidth: \"450px\" }}\r\n           >\r\n             <InputLabel>{question.placeholder}</InputLabel>\r\n             <Select\r\n-  value={selectedOptionId}\r\n-  label={question.placeholder}\r\n-  onChange={handleOptionSelect}\r\n->\r\n-  {options.map((option, index) => (\r\n-    <MenuItem key={index} value={option.value}>\r\n-      {option.label}\r\n-    </MenuItem>\r\n-  ))}\r\n-</Select>\r\n-Molim vas da zamenite taj kod u postojećoj komponenti. Ako imate još pitanja, slobodno pitajte.\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n+              value={selectedOptionId}\r\n+              label={question.placeholder}\r\n+              onChange={handleOptionSelect}\r\n+            >\r\n+              {options.map((option, index) => (\r\n+                <MenuItem key={index} value={option.value}>\r\n+                  {option.label}\r\n+                </MenuItem>\r\n+              ))}\r\n+            </Select>\r\n+           \r\n           </FormControl>\r\n \r\n           <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n \r\n"
                },
                {
                    "date": 1684331763933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,22 +23,8 @@\n     const newQuestions = [...questions];\r\n     newQuestions[index].answer = selectedOption.label;\r\n     setQuestions(newQuestions);\r\n   };\r\n-  \r\n-  // ...\r\n-  \r\n-  <Select\r\n-    value={selectedOptionId}\r\n-    label={question.placeholder}\r\n-    onChange={handleOptionSelect}\r\n-  >\r\n-    {options.map((option, index) => (\r\n-      <MenuItem key={index} value={option.value}>\r\n-        {option.label}\r\n-      </MenuItem>\r\n-    ))}\r\n-  \r\n   return (\r\n     <>\r\n       {questionType === \"dropdown\" && (\r\n         <>\r\n"
                },
                {
                    "date": 1684331779014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,18 +34,18 @@\n             style={{ marginBottom: \"16px\", width: \"100%\", minWidth: \"450px\" }}\r\n           >\r\n             <InputLabel>{question.placeholder}</InputLabel>\r\n             <Select\r\n-              value={selectedOptionId}\r\n-              label={question.placeholder}\r\n-              onChange={handleOptionSelect}\r\n-            >\r\n-              {options.map((option, index) => (\r\n-                <MenuItem key={index} value={option.value}>\r\n-                  {option.label}\r\n-                </MenuItem>\r\n-              ))}\r\n-            </Select>\r\n+  value={selectedOptionId}\r\n+  label={question.placeholder}\r\n+  onChange={handleOptionSelect}\r\n+>\r\n+  {options.map((option, index) => (\r\n+    <MenuItem key={index} value={option.value}>\r\n+      {option.label}\r\n+    </MenuItem>\r\n+  ))}\r\n+</Select>\r\n            \r\n           </FormControl>\r\n \r\n           <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n"
                },
                {
                    "date": 1684332320059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,14 +17,14 @@\n   const [options, setOptions] = useState(question.options);\r\n   const [selectedOptionId, setSelectedOptionId] = useState(null);\r\n \r\n   const handleOptionSelect = (event) => {\r\n-    const selectedOption = options.find((option) => option.value === event.target.value);\r\n-    setSelectedOptionId(event.target.value);\r\n-    const newQuestions = [...questions];\r\n-    newQuestions[index].answer = selectedOption.label;\r\n-    setQuestions(newQuestions);\r\n-  };\r\n+  const selectedOption = options.find((option) => option.value === event.target.value);\r\n+  setSelectedOptionId(event.target.value);\r\n+  const newQuestions = [...questions];\r\n+  newQuestions[index].answer = selectedOption.label;\r\n+  setQuestions(newQuestions);\r\n+};\r\n   return (\r\n     <>\r\n       {questionType === \"dropdown\" && (\r\n         <>\r\n@@ -34,18 +34,18 @@\n             style={{ marginBottom: \"16px\", width: \"100%\", minWidth: \"450px\" }}\r\n           >\r\n             <InputLabel>{question.placeholder}</InputLabel>\r\n             <Select\r\n-  value={selectedOptionId}\r\n-  label={question.placeholder}\r\n-  onChange={handleOptionSelect}\r\n->\r\n-  {options.map((option, index) => (\r\n-    <MenuItem key={index} value={option.value}>\r\n-      {option.label}\r\n-    </MenuItem>\r\n-  ))}\r\n-</Select>\r\n+              value={selectedOptionId}\r\n+              label={question.placeholder}\r\n+              onChange={handleOptionSelect}\r\n+            >\r\n+              {options.map((option, index) => (\r\n+                <MenuItem key={index} value={option.value}>\r\n+                  {option.label}\r\n+                </MenuItem>\r\n+              ))}\r\n+            </Select>\r\n            \r\n           </FormControl>\r\n \r\n           <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n"
                },
                {
                    "date": 1684332326293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,14 +17,15 @@\n   const [options, setOptions] = useState(question.options);\r\n   const [selectedOptionId, setSelectedOptionId] = useState(null);\r\n \r\n   const handleOptionSelect = (event) => {\r\n-  const selectedOption = options.find((option) => option.value === event.target.value);\r\n-  setSelectedOptionId(event.target.value);\r\n-  const newQuestions = [...questions];\r\n-  newQuestions[index].answer = selectedOption.label;\r\n-  setQuestions(newQuestions);\r\n-};\r\n+    const selectedOption = options.find(\r\n+      (option) => option.value === event.target.value\r\n+    );\r\n+    const newQuestions = [...questions];\r\n+    newQuestions[index].answer = selectedOption.label;\r\n+    setQuestions(newQuestions);\r\n+  };\r\n   return (\r\n     <>\r\n       {questionType === \"dropdown\" && (\r\n         <>\r\n@@ -44,9 +45,10 @@\n                   {option.label}\r\n                 </MenuItem>\r\n               ))}\r\n             </Select>\r\n-           \r\n+            Molim vas da zamenite taj kod u postojećoj komponenti. Ako imate još\r\n+            pitanja, slobodno pitajte.\r\n           </FormControl>\r\n \r\n           <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n \r\n"
                }
            ],
            "date": 1684325619722,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@mui/material\";\r\n\r\nconst DropdownAnswer = ({\r\n  question,\r\n  index,\r\n  questions,\r\n  setQuestions,\r\n  questionType,\r\n}) => {\r\n  const [options, setOptions] = useState(question.options);\r\n  const [selectedOptionId, setSelectedOptionId] = useState(null);\r\n\r\n  const handleOptionSelect = (event) => {\r\n    setSelectedOptionId(event.target.value);\r\n    const newQuestions = [...questions];\r\n    newQuestions[index].answer = event.target.value;\r\n    setQuestions(newQuestions);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {questionType === \"dropdown\" && (\r\n        <>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ marginBottom: \"16px\", width: \"100%\", minWidth: \"450px\" }}\r\n          >\r\n            <InputLabel>{question.placeholder}</InputLabel>\r\n            <Select\r\n              value={selectedOptionId}\r\n              label={question.placeholder}\r\n              onChange={handleOptionSelect}\r\n            >\r\n              {options.map((option, index) => (\r\n                <MenuItem key={index} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n\r\n          <Typography variant=\"subtitle1\" sx={{ margin: \"10px\" }}>\r\n            {question.currentOptionsTitle}\r\n          </Typography>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DropdownAnswer;\r\n"
        }
    ]
}