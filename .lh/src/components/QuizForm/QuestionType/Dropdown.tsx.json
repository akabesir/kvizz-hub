{
    "sourceFile": "src/components/QuizForm/QuestionType/Dropdown.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1684331505552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1684331525361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,19 +79,19 @@\n             fullWidth\r\n             style={{ marginBottom: \"16px\", width: \"100%\" }}\r\n           >\r\n             <InputLabel>{question.placeholder}</InputLabel>\r\n-            <Select value={selectedOptionId} label={question.placeholder} onChange={handleOptionSelect}>\r\n-              {options.map((option, index) => (\r\n-                <MenuItem\r\n-                  key={index}\r\n-                  value={index}\r\n-                 \r\n-                >\r\n-                  {option.label}\r\n-                </MenuItem>\r\n-              ))}\r\n-            </Select>\r\n+            <Select\r\n+  value={options.findIndex((option) => option.label === question.answer)}\r\n+  label={question.placeholder}\r\n+  onChange={handleOptionSelect}\r\n+>\r\n+  {options.map((option, index) => (\r\n+    <MenuItem key={index} value={index}>\r\n+      {option.label}\r\n+    </MenuItem>\r\n+  ))}\r\n+</Select>\r\n           </FormControl>\r\n \r\n           <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n \r\n"
                },
                {
                    "date": 1684332041056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,16 @@\n import React, { useState } from \"react\";\r\n-import {\r\n-  TextField,\r\n-  Select,\r\n-  MenuItem,\r\n-  Typography,\r\n-  FormControl,\r\n-  IconButton,\r\n-  InputLabel,\r\n-} from \"@mui/material\";\r\n-import AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n-import RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\n \r\n const Dropdown = ({\r\n   question,\r\n   index,\r\n   questions,\r\n   setQuestions,\r\n-  questionType,\r\n }) => {\r\n   const [newOption, setNewOption] = useState(\"\");\r\n   const [options, setOptions] = useState(question.options);\r\n   const [selectedOptionId, setSelectedOptionId] = useState(null);\r\n+\r\n   const handleNewOptionChange = (event) => {\r\n     setNewOption(event.target.value);\r\n   };\r\n \r\n@@ -61,81 +50,77 @@\n   const handleOptionSelect = (event) => {\r\n     const selectedOption = options[event.target.value];\r\n     updateQuestion(selectedOption.label);\r\n   };\r\n-  \r\n+\r\n   const updateQuestion = (newAnswer) => {\r\n     const newQuestions = [...questions];\r\n     newQuestions[index] = { ...question, answer: newAnswer };\r\n     setQuestions(newQuestions);\r\n   };\r\n-  \r\n+\r\n   return (\r\n     <>\r\n-      {questionType === \"dropdown\" && (\r\n-        <>\r\n-          <Typography variant=\"subtitle1\">{question.title}</Typography>\r\n-          <FormControl\r\n-            variant=\"outlined\"\r\n-            fullWidth\r\n-            style={{ marginBottom: \"16px\", width: \"100%\" }}\r\n-          >\r\n-            <InputLabel>{question.placeholder}</InputLabel>\r\n-            <Select\r\n-  value={options.findIndex((option) => option.label === question.answer)}\r\n-  label={question.placeholder}\r\n-  onChange={handleOptionSelect}\r\n->\r\n-  {options.map((option, index) => (\r\n-    <MenuItem key={index} value={index}>\r\n-      {option.label}\r\n-    </MenuItem>\r\n-  ))}\r\n-</Select>\r\n-          </FormControl>\r\n+      <Typography variant=\"subtitle1\">{question.title}</Typography>\r\n+      <FormControl\r\n+        variant=\"outlined\"\r\n+        fullWidth\r\n+        style={{ marginBottom: \"16px\", width: \"100%\" }}\r\n+      >\r\n+        <InputLabel>{question.placeholder}</InputLabel>\r\n+        <Select\r\n+          value={options.findIndex((option) => option.label === question.answer)}\r\n+          label={question.placeholder}\r\n+          onChange={handleOptionSelect}\r\n+        >\r\n+          {options.map((option, index) => (\r\n+            <MenuItem key={index} value={index}>\r\n+              {option.label}\r\n+            </MenuItem>\r\n+          ))}\r\n+        </Select>\r\n+      </FormControl>\r\n \r\n-          <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n+      <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n \r\n-          <div\r\n-            style={{\r\n-              display: \"flex\",\r\n-              justifyContent: \"center\",\r\n-              alignItems: \"center\",\r\n-            }}\r\n-          >\r\n-            <TextField\r\n-              sx={{\r\n-                margin: \"10px\",\r\n-                marginLeft: \"2rem\",\r\n-              }}\r\n-              value={newOption}\r\n-              onChange={handleNewOptionChange}\r\n-              label=\"New Option\"\r\n-            />\r\n-            <IconButton\r\n-              style={{ width: \"64px\", marginLeft: \"10px\" }}\r\n-              onClick={() => handleAddOption()}\r\n-            >\r\n-              <AddCircleOutlineIcon />\r\n-            </IconButton>\r\n-          </div>\r\n+      <div\r\n+        style={{\r\n+          display: \"flex\",\r\n+          justifyContent: \"center\",\r\n+          alignItems: \"center\",\r\n+        }}\r\n+      >\r\n+        <TextField\r\n+          sx={{\r\n+            margin: \"10px\",\r\n+            marginLeft: \"2rem\",\r\n+          }}\r\n+          value={newOption}\r\n+          onChange={handleNewOptionChange}\r\n+          label=\"New Option\"\r\n+        />\r\n+        <IconButton\r\n+          style={{ width: \"64px\", marginLeft: \"10px\" }}\r\n+          onClick={() => handleAddOption()}\r\n+        >\r\n+          <AddCircleOutlineIcon />\r\n+        </IconButton>\r\n+      </div>\r\n \r\n-          <Typography variant=\"subtitle1\" sx={{ margin: \"10px\" }}>\r\n-            {question.currentOptionsTitle}\r\n-          </Typography>\r\n+      <Typography variant=\"subtitle1\" sx={{ margin: \"10px\" }}>\r\n+        {question.currentOptionsTitle}\r\n+      </Typography>\r\n \r\n-          {options.map((option, optionIndex) => (\r\n-            <div\r\n-              key={optionIndex}\r\n-              style={{ display: \"flex\", alignItems: \"center\" }}\r\n-            >\r\n-              <TextField\r\n-                value={option.label}\r\n-                onChange={(event) =>\r\n-                  handleOptionLabelChange(event, optionIndex)\r\n-                }\r\n-                fullWidth\r\n-              />\r\n+      {options.map((option, optionIndex) => (\r\n+        <div\r\n+          key={optionIndex}\r\n+          style={{ display: \"flex\", alignItems: \"center\" }}\r\n+        >\r\n+          <TextField\r\n+            value={option.label}\r\n+            onChange={(event) => handleOptionLabelChange(event, optionIndex)}\r\n+            fullWidth\r\n+          />\r\n               <IconButton\r\n                 aria-label={question.removeOptionLabel}\r\n                 onClick={() => handleRemoveOption(optionIndex)}\r\n                 style={{ width: \"64px\" }}\r\n"
                },
                {
                    "date": 1684332062167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,27 @@\n import React, { useState } from \"react\";\r\n+import {\r\n+  TextField,\r\n+  Select,\r\n+  MenuItem,\r\n+  Typography,\r\n+  FormControl,\r\n+  IconButton,\r\n+  InputLabel,\r\n+} from \"@mui/material\";\r\n+import AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n+import RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\n \r\n const Dropdown = ({\r\n   question,\r\n   index,\r\n   questions,\r\n   setQuestions,\r\n+  questionType,\r\n }) => {\r\n   const [newOption, setNewOption] = useState(\"\");\r\n   const [options, setOptions] = useState(question.options);\r\n   const [selectedOptionId, setSelectedOptionId] = useState(null);\r\n-\r\n   const handleNewOptionChange = (event) => {\r\n     setNewOption(event.target.value);\r\n   };\r\n \r\n@@ -59,68 +70,74 @@\n   };\r\n \r\n   return (\r\n     <>\r\n-      <Typography variant=\"subtitle1\">{question.title}</Typography>\r\n-      <FormControl\r\n-        variant=\"outlined\"\r\n-        fullWidth\r\n-        style={{ marginBottom: \"16px\", width: \"100%\" }}\r\n-      >\r\n-        <InputLabel>{question.placeholder}</InputLabel>\r\n-        <Select\r\n-          value={options.findIndex((option) => option.label === question.answer)}\r\n-          label={question.placeholder}\r\n-          onChange={handleOptionSelect}\r\n-        >\r\n-          {options.map((option, index) => (\r\n-            <MenuItem key={index} value={index}>\r\n-              {option.label}\r\n-            </MenuItem>\r\n-          ))}\r\n-        </Select>\r\n-      </FormControl>\r\n+      {questionType === \"dropdown\" && (\r\n+        <>\r\n+          <Typography variant=\"subtitle1\">{question.title}</Typography>\r\n+          <FormControl\r\n+            variant=\"outlined\"\r\n+            fullWidth\r\n+            style={{ marginBottom: \"16px\", width: \"100%\" }}\r\n+          >\r\n+            <InputLabel>{question.placeholder}</InputLabel>\r\n+            <Select\r\n+              value={options.findIndex(\r\n+                (option) => option.label === question.answer\r\n+              )}\r\n+              label={question.placeholder}\r\n+              onChange={handleOptionSelect}\r\n+            >\r\n+              {options.map((option, index) => (\r\n+                <MenuItem key={index} value={index}>\r\n+                  {option.label}\r\n+                </MenuItem>\r\n+              ))}\r\n+            </Select>\r\n+          </FormControl>\r\n \r\n-      <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n+          <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n \r\n-      <div\r\n-        style={{\r\n-          display: \"flex\",\r\n-          justifyContent: \"center\",\r\n-          alignItems: \"center\",\r\n-        }}\r\n-      >\r\n-        <TextField\r\n-          sx={{\r\n-            margin: \"10px\",\r\n-            marginLeft: \"2rem\",\r\n-          }}\r\n-          value={newOption}\r\n-          onChange={handleNewOptionChange}\r\n-          label=\"New Option\"\r\n-        />\r\n-        <IconButton\r\n-          style={{ width: \"64px\", marginLeft: \"10px\" }}\r\n-          onClick={() => handleAddOption()}\r\n-        >\r\n-          <AddCircleOutlineIcon />\r\n-        </IconButton>\r\n-      </div>\r\n+          <div\r\n+            style={{\r\n+              display: \"flex\",\r\n+              justifyContent: \"center\",\r\n+              alignItems: \"center\",\r\n+            }}\r\n+          >\r\n+            <TextField\r\n+              sx={{\r\n+                margin: \"10px\",\r\n+                marginLeft: \"2rem\",\r\n+              }}\r\n+              value={newOption}\r\n+              onChange={handleNewOptionChange}\r\n+              label=\"New Option\"\r\n+            />\r\n+            <IconButton\r\n+              style={{ width: \"64px\", marginLeft: \"10px\" }}\r\n+              onClick={() => handleAddOption()}\r\n+            >\r\n+              <AddCircleOutlineIcon />\r\n+            </IconButton>\r\n+          </div>\r\n \r\n-      <Typography variant=\"subtitle1\" sx={{ margin: \"10px\" }}>\r\n-        {question.currentOptionsTitle}\r\n-      </Typography>\r\n+          <Typography variant=\"subtitle1\" sx={{ margin: \"10px\" }}>\r\n+            {question.currentOptionsTitle}\r\n+          </Typography>\r\n \r\n-      {options.map((option, optionIndex) => (\r\n-        <div\r\n-          key={optionIndex}\r\n-          style={{ display: \"flex\", alignItems: \"center\" }}\r\n-        >\r\n-          <TextField\r\n-            value={option.label}\r\n-            onChange={(event) => handleOptionLabelChange(event, optionIndex)}\r\n-            fullWidth\r\n-          />\r\n+          {options.map((option, optionIndex) => (\r\n+            <div\r\n+              key={optionIndex}\r\n+              style={{ display: \"flex\", alignItems: \"center\" }}\r\n+            >\r\n+              <TextField\r\n+                value={option.label}\r\n+                onChange={(event) =>\r\n+                  handleOptionLabelChange(event, optionIndex)\r\n+                }\r\n+                fullWidth\r\n+              />\r\n               <IconButton\r\n                 aria-label={question.removeOptionLabel}\r\n                 onClick={() => handleRemoveOption(optionIndex)}\r\n                 style={{ width: \"64px\" }}\r\n"
                },
                {
                    "date": 1684332077846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState } from \"react\";\r\n+\r\n import {\r\n   TextField,\r\n   Select,\r\n   MenuItem,\r\n@@ -10,18 +10,20 @@\n } from \"@mui/material\";\r\n import AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n import RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\n \r\n+import React, { useState } from \"react\";\r\n+\r\n const Dropdown = ({\r\n   question,\r\n   index,\r\n   questions,\r\n   setQuestions,\r\n-  questionType,\r\n }) => {\r\n   const [newOption, setNewOption] = useState(\"\");\r\n   const [options, setOptions] = useState(question.options);\r\n   const [selectedOptionId, setSelectedOptionId] = useState(null);\r\n+\r\n   const handleNewOptionChange = (event) => {\r\n     setNewOption(event.target.value);\r\n   };\r\n \r\n@@ -70,74 +72,68 @@\n   };\r\n \r\n   return (\r\n     <>\r\n-      {questionType === \"dropdown\" && (\r\n-        <>\r\n-          <Typography variant=\"subtitle1\">{question.title}</Typography>\r\n-          <FormControl\r\n-            variant=\"outlined\"\r\n-            fullWidth\r\n-            style={{ marginBottom: \"16px\", width: \"100%\" }}\r\n-          >\r\n-            <InputLabel>{question.placeholder}</InputLabel>\r\n-            <Select\r\n-              value={options.findIndex(\r\n-                (option) => option.label === question.answer\r\n-              )}\r\n-              label={question.placeholder}\r\n-              onChange={handleOptionSelect}\r\n-            >\r\n-              {options.map((option, index) => (\r\n-                <MenuItem key={index} value={index}>\r\n-                  {option.label}\r\n-                </MenuItem>\r\n-              ))}\r\n-            </Select>\r\n-          </FormControl>\r\n+      <Typography variant=\"subtitle1\">{question.title}</Typography>\r\n+      <FormControl\r\n+        variant=\"outlined\"\r\n+        fullWidth\r\n+        style={{ marginBottom: \"16px\", width: \"100%\" }}\r\n+      >\r\n+        <InputLabel>{question.placeholder}</InputLabel>\r\n+        <Select\r\n+          value={options.findIndex((option) => option.label === question.answer)}\r\n+          label={question.placeholder}\r\n+          onChange={handleOptionSelect}\r\n+        >\r\n+          {options.map((option, index) => (\r\n+            <MenuItem key={index} value={index}>\r\n+              {option.label}\r\n+            </MenuItem>\r\n+          ))}\r\n+        </Select>\r\n+      </FormControl>\r\n \r\n-          <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n+      <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n \r\n-          <div\r\n-            style={{\r\n-              display: \"flex\",\r\n-              justifyContent: \"center\",\r\n-              alignItems: \"center\",\r\n-            }}\r\n-          >\r\n-            <TextField\r\n-              sx={{\r\n-                margin: \"10px\",\r\n-                marginLeft: \"2rem\",\r\n-              }}\r\n-              value={newOption}\r\n-              onChange={handleNewOptionChange}\r\n-              label=\"New Option\"\r\n-            />\r\n-            <IconButton\r\n-              style={{ width: \"64px\", marginLeft: \"10px\" }}\r\n-              onClick={() => handleAddOption()}\r\n-            >\r\n-              <AddCircleOutlineIcon />\r\n-            </IconButton>\r\n-          </div>\r\n+      <div\r\n+        style={{\r\n+          display: \"flex\",\r\n+          justifyContent: \"center\",\r\n+          alignItems: \"center\",\r\n+        }}\r\n+      >\r\n+        <TextField\r\n+          sx={{\r\n+            margin: \"10px\",\r\n+            marginLeft: \"2rem\",\r\n+          }}\r\n+          value={newOption}\r\n+          onChange={handleNewOptionChange}\r\n+          label=\"New Option\"\r\n+        />\r\n+        <IconButton\r\n+          style={{ width: \"64px\", marginLeft: \"10px\" }}\r\n+          onClick={() => handleAddOption()}\r\n+        >\r\n+          <AddCircleOutlineIcon />\r\n+        </IconButton>\r\n+      </div>\r\n \r\n-          <Typography variant=\"subtitle1\" sx={{ margin: \"10px\" }}>\r\n-            {question.currentOptionsTitle}\r\n-          </Typography>\r\n+      <Typography variant=\"subtitle1\" sx={{ margin: \"10px\" }}>\r\n+        {question.currentOptionsTitle}\r\n+      </Typography>\r\n \r\n-          {options.map((option, optionIndex) => (\r\n-            <div\r\n-              key={optionIndex}\r\n-              style={{ display: \"flex\", alignItems: \"center\" }}\r\n-            >\r\n-              <TextField\r\n-                value={option.label}\r\n-                onChange={(event) =>\r\n-                  handleOptionLabelChange(event, optionIndex)\r\n-                }\r\n-                fullWidth\r\n-              />\r\n+      {options.map((option, optionIndex) => (\r\n+        <div\r\n+          key={optionIndex}\r\n+          style={{ display: \"flex\", alignItems: \"center\" }}\r\n+        >\r\n+          <TextField\r\n+            value={option.label}\r\n+            onChange={(event) => handleOptionLabelChange(event, optionIndex)}\r\n+            fullWidth\r\n+          />\r\n               <IconButton\r\n                 aria-label={question.removeOptionLabel}\r\n                 onClick={() => handleRemoveOption(optionIndex)}\r\n                 style={{ width: \"64px\" }}\r\n"
                },
                {
                    "date": 1684332097388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n     setQuestions(newQuestions);\r\n   };\r\n \r\n   return (\r\n-    <>\r\n+   \r\n       <Typography variant=\"subtitle1\">{question.title}</Typography>\r\n       <FormControl\r\n         variant=\"outlined\"\r\n         fullWidth\r\n"
                },
                {
                    "date": 1684332103181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n     setQuestions(newQuestions);\r\n   };\r\n \r\n   return (\r\n-   \r\n+    <>\r\n       <Typography variant=\"subtitle1\">{question.title}</Typography>\r\n       <FormControl\r\n         variant=\"outlined\"\r\n         fullWidth\r\n@@ -143,9 +143,9 @@\n             </div>\r\n           ))}\r\n         </>\r\n       )}\r\n-    </>\r\n+   \r\n   );\r\n };\r\n \r\n export default Dropdown;\r\n"
                },
                {
                    "date": 1684332119825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,8 +144,7 @@\n           ))}\r\n         </>\r\n       )}\r\n    \r\n-  );\r\n-};\r\n \r\n+\r\n export default Dropdown;\r\n"
                },
                {
                    "date": 1684332143466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n   question,\r\n   index,\r\n   questions,\r\n   setQuestions,\r\n+  question\r\n }) => {\r\n   const [newOption, setNewOption] = useState(\"\");\r\n   const [options, setOptions] = useState(question.options);\r\n   const [selectedOptionId, setSelectedOptionId] = useState(null);\r\n"
                },
                {
                    "date": 1684332386803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-\r\n+import React, { useState } from \"react\";\r\n import {\r\n   TextField,\r\n   Select,\r\n   MenuItem,\r\n@@ -10,21 +10,18 @@\n } from \"@mui/material\";\r\n import AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n import RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\n \r\n-import React, { useState } from \"react\";\r\n-\r\n const Dropdown = ({\r\n   question,\r\n   index,\r\n   questions,\r\n   setQuestions,\r\n-  question\r\n+  questionType,\r\n }) => {\r\n   const [newOption, setNewOption] = useState(\"\");\r\n   const [options, setOptions] = useState(question.options);\r\n   const [selectedOptionId, setSelectedOptionId] = useState(null);\r\n-\r\n   const handleNewOptionChange = (event) => {\r\n     setNewOption(event.target.value);\r\n   };\r\n \r\n@@ -60,81 +57,83 @@\n     setOptions(newOptions);\r\n     updateQuestion(newOptions);\r\n   };\r\n \r\n-  const handleOptionSelect = (event) => {\r\n-    const selectedOption = options[event.target.value];\r\n-    updateQuestion(selectedOption.label);\r\n-  };\r\n-\r\n-  const updateQuestion = (newAnswer) => {\r\n+  const updateQuestion = (newOptions) => {\r\n     const newQuestions = [...questions];\r\n-    newQuestions[index] = { ...question, answer: newAnswer };\r\n+    newQuestions[index] = { ...question, options: newOptions };\r\n     setQuestions(newQuestions);\r\n   };\r\n \r\n+  const handleOptionSelect = (event) => {\r\n+    setSelectedOptionId(event.target.value);\r\n+  };\r\n   return (\r\n     <>\r\n-      <Typography variant=\"subtitle1\">{question.title}</Typography>\r\n-      <FormControl\r\n-        variant=\"outlined\"\r\n-        fullWidth\r\n-        style={{ marginBottom: \"16px\", width: \"100%\" }}\r\n-      >\r\n-        <InputLabel>{question.placeholder}</InputLabel>\r\n-        <Select\r\n-          value={options.findIndex((option) => option.label === question.answer)}\r\n-          label={question.placeholder}\r\n-          onChange={handleOptionSelect}\r\n-        >\r\n-          {options.map((option, index) => (\r\n-            <MenuItem key={index} value={index}>\r\n-              {option.label}\r\n-            </MenuItem>\r\n-          ))}\r\n-        </Select>\r\n-      </FormControl>\r\n+      {questionType === \"dropdown\" && (\r\n+        <>\r\n+          <Typography variant=\"subtitle1\">{question.title}</Typography>\r\n+          <FormControl\r\n+            variant=\"outlined\"\r\n+            fullWidth\r\n+            style={{ marginBottom: \"16px\", width: \"100%\" }}\r\n+          >\r\n+            <InputLabel>{question.placeholder}</InputLabel>\r\n+            <Select value={selectedOptionId} label={question.placeholder} onChange={handleOptionSelect}>\r\n+              {options.map((option, index) => (\r\n+                <MenuItem\r\n+                  key={index}\r\n+                  value={index}\r\n+                 \r\n+                >\r\n+                  {option.label}\r\n+                </MenuItem>\r\n+              ))}\r\n+            </Select>\r\n+          </FormControl>\r\n \r\n-      <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n+          <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n \r\n-      <div\r\n-        style={{\r\n-          display: \"flex\",\r\n-          justifyContent: \"center\",\r\n-          alignItems: \"center\",\r\n-        }}\r\n-      >\r\n-        <TextField\r\n-          sx={{\r\n-            margin: \"10px\",\r\n-            marginLeft: \"2rem\",\r\n-          }}\r\n-          value={newOption}\r\n-          onChange={handleNewOptionChange}\r\n-          label=\"New Option\"\r\n-        />\r\n-        <IconButton\r\n-          style={{ width: \"64px\", marginLeft: \"10px\" }}\r\n-          onClick={() => handleAddOption()}\r\n-        >\r\n-          <AddCircleOutlineIcon />\r\n-        </IconButton>\r\n-      </div>\r\n+          <div\r\n+            style={{\r\n+              display: \"flex\",\r\n+              justifyContent: \"center\",\r\n+              alignItems: \"center\",\r\n+            }}\r\n+          >\r\n+            <TextField\r\n+              sx={{\r\n+                margin: \"10px\",\r\n+                marginLeft: \"2rem\",\r\n+              }}\r\n+              value={newOption}\r\n+              onChange={handleNewOptionChange}\r\n+              label=\"New Option\"\r\n+            />\r\n+            <IconButton\r\n+              style={{ width: \"64px\", marginLeft: \"10px\" }}\r\n+              onClick={() => handleAddOption()}\r\n+            >\r\n+              <AddCircleOutlineIcon />\r\n+            </IconButton>\r\n+          </div>\r\n \r\n-      <Typography variant=\"subtitle1\" sx={{ margin: \"10px\" }}>\r\n-        {question.currentOptionsTitle}\r\n-      </Typography>\r\n+          <Typography variant=\"subtitle1\" sx={{ margin: \"10px\" }}>\r\n+            {question.currentOptionsTitle}\r\n+          </Typography>\r\n \r\n-      {options.map((option, optionIndex) => (\r\n-        <div\r\n-          key={optionIndex}\r\n-          style={{ display: \"flex\", alignItems: \"center\" }}\r\n-        >\r\n-          <TextField\r\n-            value={option.label}\r\n-            onChange={(event) => handleOptionLabelChange(event, optionIndex)}\r\n-            fullWidth\r\n-          />\r\n+          {options.map((option, optionIndex) => (\r\n+            <div\r\n+              key={optionIndex}\r\n+              style={{ display: \"flex\", alignItems: \"center\" }}\r\n+            >\r\n+              <TextField\r\n+                value={option.label}\r\n+                onChange={(event) =>\r\n+                  handleOptionLabelChange(event, optionIndex)\r\n+                }\r\n+                fullWidth\r\n+              />\r\n               <IconButton\r\n                 aria-label={question.removeOptionLabel}\r\n                 onClick={() => handleRemoveOption(optionIndex)}\r\n                 style={{ width: \"64px\" }}\r\n@@ -144,8 +143,9 @@\n             </div>\r\n           ))}\r\n         </>\r\n       )}\r\n-   \r\n+    </>\r\n+  );\r\n+};\r\n \r\n-\r\n export default Dropdown;\r\n"
                }
            ],
            "date": 1684331505552,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  FormControl,\r\n  IconButton,\r\n  InputLabel,\r\n} from \"@mui/material\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\n\r\nconst Dropdown = ({\r\n  question,\r\n  index,\r\n  questions,\r\n  setQuestions,\r\n  questionType,\r\n}) => {\r\n  const [newOption, setNewOption] = useState(\"\");\r\n  const [options, setOptions] = useState(question.options);\r\n  const [selectedOptionId, setSelectedOptionId] = useState(null);\r\n  const handleNewOptionChange = (event) => {\r\n    setNewOption(event.target.value);\r\n  };\r\n\r\n  const handleAddOption = () => {\r\n    if (newOption) {\r\n      const newOptions = [...options, { label: newOption, checked: false }];\r\n      setOptions(newOptions);\r\n      updateQuestion(newOptions);\r\n      setNewOption(\"\");\r\n    }\r\n  };\r\n\r\n  const handleOptionChange = (optionIndex) => {\r\n    const newOptions = options.map((option, index) => ({\r\n      ...option,\r\n      checked: index === optionIndex,\r\n    }));\r\n    setOptions(newOptions);\r\n    updateQuestion(newOptions);\r\n  };\r\n\r\n  const handleOptionLabelChange = (event, optionIndex) => {\r\n    const newOptions = options.map((option, index) => ({\r\n      ...option,\r\n      label: index === optionIndex ? event.target.value : option.label,\r\n    }));\r\n    setOptions(newOptions);\r\n    updateQuestion(newOptions);\r\n  };\r\n\r\n  const handleRemoveOption = (optionIndex) => {\r\n    const newOptions = options.filter((option, index) => index !== optionIndex);\r\n    setOptions(newOptions);\r\n    updateQuestion(newOptions);\r\n  };\r\n\r\n  const handleOptionSelect = (event) => {\r\n    const selectedOption = options[event.target.value];\r\n    updateQuestion(selectedOption.label);\r\n  };\r\n  \r\n  const updateQuestion = (newAnswer) => {\r\n    const newQuestions = [...questions];\r\n    newQuestions[index] = { ...question, answer: newAnswer };\r\n    setQuestions(newQuestions);\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      {questionType === \"dropdown\" && (\r\n        <>\r\n          <Typography variant=\"subtitle1\">{question.title}</Typography>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ marginBottom: \"16px\", width: \"100%\" }}\r\n          >\r\n            <InputLabel>{question.placeholder}</InputLabel>\r\n            <Select value={selectedOptionId} label={question.placeholder} onChange={handleOptionSelect}>\r\n              {options.map((option, index) => (\r\n                <MenuItem\r\n                  key={index}\r\n                  value={index}\r\n                 \r\n                >\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Typography variant=\"subtitle1\">{question.newOptionTitle}</Typography>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <TextField\r\n              sx={{\r\n                margin: \"10px\",\r\n                marginLeft: \"2rem\",\r\n              }}\r\n              value={newOption}\r\n              onChange={handleNewOptionChange}\r\n              label=\"New Option\"\r\n            />\r\n            <IconButton\r\n              style={{ width: \"64px\", marginLeft: \"10px\" }}\r\n              onClick={() => handleAddOption()}\r\n            >\r\n              <AddCircleOutlineIcon />\r\n            </IconButton>\r\n          </div>\r\n\r\n          <Typography variant=\"subtitle1\" sx={{ margin: \"10px\" }}>\r\n            {question.currentOptionsTitle}\r\n          </Typography>\r\n\r\n          {options.map((option, optionIndex) => (\r\n            <div\r\n              key={optionIndex}\r\n              style={{ display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              <TextField\r\n                value={option.label}\r\n                onChange={(event) =>\r\n                  handleOptionLabelChange(event, optionIndex)\r\n                }\r\n                fullWidth\r\n              />\r\n              <IconButton\r\n                aria-label={question.removeOptionLabel}\r\n                onClick={() => handleRemoveOption(optionIndex)}\r\n                style={{ width: \"64px\" }}\r\n              >\r\n                <RemoveCircleOutlineIcon />\r\n              </IconButton>\r\n            </div>\r\n          ))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"
        }
    ]
}